{
  "version": 3,
  "file": "app.js",
  "sources": [
    "tmp/transpiled/app/adapters/application.js",
    "tmp/transpiled/app/app.js",
    "tmp/transpiled/app/components/pretty-color.js",
    "tmp/transpiled/app/controllers/todo.js",
    "tmp/transpiled/app/controllers/todos.js",
    "tmp/transpiled/app/helpers/reverse-word.js",
    "tmp/transpiled/app/models/todo.js",
    "tmp/transpiled/app/router.js",
    "tmp/transpiled/app/routes/todos.js",
    "tmp/transpiled/app/routes/todos/active.js",
    "tmp/transpiled/app/routes/todos/completed.js",
    "tmp/transpiled/app/routes/todos/index.js",
    "tmp/transpiled/app/utils/ajax.js",
    "tmp/transpiled/app/views/edit_todo.js"
  ],
  "names": [],
  "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K",
  "sourcesContent": [
    "define(\"appkit/adapters/application\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    // export default DS.FixtureAdapter.extend();\n    __exports__[\"default\"] = DS.LSAdapter.extend({ namespace: 'todo-emberjs' });\n  });",
    "define(\"appkit/app\", \n  [\"resolver\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n\n    var App;\n\n    App = Ember.Application.extend({\n      LOG_ACTIVE_GENERATION: true,\n      LOG_MODULE_RESOLVER: true,\n      LOG_TRANSITIONS: true,\n      LOG_TRANSITIONS_INTERNAL: true,\n      LOG_VIEW_LOOKUPS: true,\n      modulePrefix: 'appkit',\n      Resolver: Resolver['default']\n    });\n\n    DS.DebugAdapter.reopen({\n      getModelTypes: function() {\n        var self;\n        self = this;\n        return Ember.keys(requirejs._eak_seen).filter(function(key) {\n          return !!key.match(/^appkit\\/models\\//) && self.detect(require(key)[\"default\"]);\n        }).map(function(key) {\n          var type, typeKey;\n          type = require(key)[\"default\"];\n          typeKey = key.match(/^appkit\\/models\\/(.*)/)[1];\n          type.toString = function() {\n            return {\n              typeKey: typeKey\n            };\n          };\n          return type;\n        });\n      }\n    });\n\n    __exports__[\"default\"] = App;;\n  });",
    "define(\"appkit/components/pretty-color\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Component.extend({\n      classNames: ['pretty-color'],\n      attributeBindings: ['style'],\n      style: function(){\n        return 'color: ' + this.get('name') + ';';\n      }.property('name')\n    });\n  });",
    "define(\"appkit/controllers/todo\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var TodoController;\n\n    TodoController = Ember.ObjectController.extend({\n      actions: {\n        editTodo: function() {\n          return this.set('isEditing', true);\n        },\n        removeTodo: function() {\n          var todo;\n          todo = this.get('model');\n          todo.deleteRecord();\n          return todo.save();\n        },\n        acceptChanges: function() {\n          this.set('isEditing', false);\n          if (Ember.isEmpty(this.get('model.title'))) {\n            return this.send('removeTodo');\n          } else {\n            return this.get('model').save();\n          }\n        }\n      },\n      isEditing: false,\n      isCompleted: (function(key, value) {\n        var model;\n        model = this.get('model');\n        if (value === void 0) {\n          return model.get('isCompleted');\n        } else {\n          model.set('isCompleted', value);\n          model.save();\n          return value;\n        }\n      }).property('model.isCompleted')\n    });\n\n    __exports__[\"default\"] = TodoController;\n  });",
    "define(\"appkit/controllers/todos\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var TodosController;\n\n    TodosController = Ember.ArrayController.extend({\n      remaining: (function() {\n        return this.filterBy('isCompleted', false).get('length');\n      }).property('@each.isCompleted'),\n      inflection: (function() {\n        var remaining;\n        remaining = this.get('remaining');\n        if (remaining === 1) {\n          return 'item';\n        } else {\n          return 'items';\n        }\n      }).property('remaining'),\n      hasCompleted: (function() {\n        return this.get('completed_count') > 0;\n      }).property('completed_count'),\n      completed_count: (function() {\n        return this.filterBy('isCompleted', true).get('length');\n      }).property('@each.isCompleted'),\n      allAreDone: (function() {\n        return this.everyProperty('isCompleted', true);\n      }).property('@each.isCompleted'),\n      actions: {\n        createTodo: function() {\n          var title, todo;\n          title = this.get('newTitle');\n          if (!title.trim()) {\n            return;\n          }\n          todo = this.store.createRecord('todo', {\n            title: title,\n            isCompleted: false\n          });\n          this.set('newTitle', '');\n          return todo.save();\n        },\n        clearCompleted: function() {\n          var completed;\n          completed = this.filterBy('isCompleted', true);\n          completed.invoke('deleteRecord');\n          return completed.invoke('save');\n        }\n      }\n    });\n\n    __exports__[\"default\"] = TodosController;\n  });",
    "define(\"appkit/helpers/reverse-word\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    // Please note that Handlebars helpers will only be found automatically by the\n    // resolver if their name contains a dash (reverse-word, translate-text, etc.)\n    // For more details: http://stefanpenner.github.io/ember-app-kit/guides/using-modules.html\n\n    __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(function(word) {\n      return word.split('').reverse().join('');\n    });\n  });",
    "define(\"appkit/models/todo\", \n  [\"appkit/app\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var App = __dependency1__[\"default\"];\n    var Todo;\n\n    Todo = DS.Model.extend({\n      title: DS.attr('string'),\n      isCompleted: DS.attr('boolean')\n    });\n\n    Todo.FIXTURES = [\n      {\n        id: 1,\n        title: 'Learn Ember.js',\n        isCompleted: true\n      }, {\n        id: 2,\n        title: 'Go do Stuff',\n        isCompleted: false\n      }\n    ];\n\n    __exports__[\"default\"] = Todo;;\n  });",
    "define(\"appkit/router\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var Router;\n\n    Router = Ember.Router.extend();\n\n    Router.map(function() {\n      return this.resource('todos', {\n        path: '/'\n      }, function() {\n        this.route('active');\n        return this.route('completed');\n      });\n    });\n\n    __exports__[\"default\"] = Router;;\n  });",
    "define(\"appkit/routes/todos\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var TodosRoute;\n\n    TodosRoute = Ember.Route.extend({\n      model: function() {\n        return this.store.find('todo');\n      }\n    });\n\n    __exports__[\"default\"] = TodosRoute;\n  });",
    "define(\"appkit/routes/todos/active\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var TodosActiveRoute;\n\n    TodosActiveRoute = Ember.Route.extend({\n      model: function() {\n        return this.store.filter('todo', function(todo) {\n          return !todo.get('isCompleted');\n        });\n      },\n      renderTemplate: function(controller) {\n        return this.render('todos/index', {\n          controller: controller\n        });\n      }\n    });\n\n    __exports__[\"default\"] = TodosActiveRoute;\n  });",
    "define(\"appkit/routes/todos/completed\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var TodosCompletedRoute;\n\n    TodosCompletedRoute = Ember.Route.extend({\n      model: function() {\n        return this.store.filter('todo', function(todo) {\n          return todo.get('isCompleted');\n        });\n      },\n      renderTemplate: function(controller) {\n        return this.render('todos/index', {\n          controller: controller\n        });\n      }\n    });\n\n    __exports__[\"default\"] = TodosCompletedRoute;\n  });",
    "define(\"appkit/routes/todos/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var TodosIndexRoute;\n\n    TodosIndexRoute = Ember.Route.extend({\n      model: function() {\n        return this.store.find('todo');\n      }\n    });\n\n    __exports__[\"default\"] = TodosIndexRoute;\n  });",
    "define(\"appkit/utils/ajax\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    /* global ic */\n    __exports__[\"default\"] = function ajax(){\n      return ic.ajax.apply(null, arguments);\n    }\n  });",
    "define(\"appkit/views/edit_todo\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var EditTodoView;\n\n    EditTodoView = Ember.TextField.extend({\n      didInsertElement: function() {\n        return this.$().focus();\n      }\n    });\n\n    __exports__[\"default\"] = EditTodoView;\n  });"
  ]
}